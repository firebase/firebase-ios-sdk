name: common

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
  
jobs:
  spm-package-resolved:
    env:
      FIREBASECI_USE_LATEST_GOOGLEAPPMEASUREMENT: 1
    runs-on: macos-15
    outputs:
      cache_key: ${{ steps.generate_cache_key.outputs.cache_key }}
    steps:
      - uses: actions/checkout@v4
      - name: Xcode
        run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
      - name: Generate Swift Package.resolved
        id: swift_package_resolve
        run: |
          swift package resolve
      - name: Generate cache key
        id: generate_cache_key
        run: |
          cache_key="${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}"
          echo "cache_key=${cache_key}" >> "$GITHUB_OUTPUT"
      - uses: actions/cache/save@v4
        id: cache
        with:
          path: .build
          key: ${{ steps.generate_cache_key.outputs.cache_key }}

  spm:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    needs: [spm-package-resolved]
    strategy:
      matrix:
        # TODO: Add Xcode matrix when Xcode 16 is ubiquitous on CI runners.
        include:
          - os: macos-14
            xcode: Xcode_16.2
            platform: iOS
          - os: macos-15
            xcode: Xcode_16.2
            platform: iOS
          - os: macos-15
            xcode: Xcode_16.2
            platform: iOS
          - os: macos-15
            xcode: Xcode_16.2
            platform: tvOS
          - os: macos-15
            xcode: Xcode_16.2
            platform: macOS
          - os: macos-15
            xcode: Xcode_16.2
            platform: watchOS
          - os: macos-15
            xcode: Xcode_16.2
            platform: catalyst
          - os: macos-15
            xcode: Xcode_16.2
            platform: visionOS
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache/restore@v4
      with:
        path: .build
        key: ${{needs.spm-package-resolved.outputs.cache_key}}
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - name: Install visionOS, if needed.
      if: matrix.platform == 'visionOS'
      run: xcodebuild -downloadPlatform visionOS
    - name: Initialize xcodebuild
      run: scripts/setup_spm_tests.sh
    - name: Unit Tests
      run: scripts/third_party/travis/retry.sh ./scripts/build.sh ${{ inputs.target }} ${{ matrix.platform }} spm
