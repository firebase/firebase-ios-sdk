name: storage

on:
  pull_request:
    paths:
    - 'FirebaseStorage**'
    - 'FirebaseAuth/Interop/*.h'
    - '.github/workflows/storage.yml'
    # Rebuild on Ruby infrastructure changes.
    - 'Gemfile*'
  schedule:
    # Run every day at 12am (PST) - cron uses UTC times
    - cron:  '0 8 * * *'

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
    cancel-in-progress: true

jobs:
  storage-integration-tests:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    strategy:
      matrix:
        language: [Swift, ObjC]
        include:
          - os: macos-15
            xcode: Xcode_16.1
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: mikehardy/buildcache-action@c87cea0ccd718971d6cc39e672c4f26815b6c126
      with:
        cache_key: integration${{ matrix.os }}
    - uses: ruby/setup-ruby@v1
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Install xcpretty
      run: gem install xcpretty
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/storage-db-plist.gpg \
          FirebaseStorage/Tests/Integration/Resources/GoogleService-Info.plist "$plist_secret"
    - name: Install Credentials.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/Storage/Credentials.h.gpg \
          FirebaseStorage/Tests/ObjCIntegration/Credentials.h "$plist_secret"
    - name: Install Credentials.swift
      run: |
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/Storage/Credentials.swift.gpg \
          FirebaseStorage/Tests/Integration/Credentials.swift "$plist_secret"
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - uses: nick-fields/retry@v3
      with:
        timeout_minutes: 120
        max_attempts: 3
        retry_on: error
        retry_wait_seconds: 120
        command: ([ -z $plist_secret ] || scripts/build.sh Storage${{ matrix.language }} all)

  spm-package-resolved:
    env:
      FIREBASECI_USE_LATEST_GOOGLEAPPMEASUREMENT: 1
    runs-on: macos-14
    outputs:
      cache_key: ${{ steps.generate_cache_key.outputs.cache_key }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate Swift Package.resolved
        id: swift_package_resolve
        run: |
          swift package resolve
      - name: Generate cache key
        id: generate_cache_key
        run: |
          cache_key="${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}"
          echo "cache_key=${cache_key}" >> "$GITHUB_OUTPUT"
      - uses: actions/cache/save@v4
        id: cache
        with:
          path: .build
          key: ${{ steps.generate_cache_key.outputs.cache_key }}

  spm:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    needs: [spm-package-resolved]
    strategy:
      matrix:
        include:
          - os: macos-13
            xcode: Xcode_15.2
            target: iOS
          - os: macos-14
            xcode: Xcode_15.4
            target: iOS
          - os: macos-15
            xcode: Xcode_16.1
            target: iOS
          - os: macos-15
            xcode: Xcode_16.1
            target: tvOS
          - os: macos-15
            xcode: Xcode_16.1
            target: macOS
          - os: macos-15
            xcode: Xcode_16.1
            target: watchOS
          - os: macos-15
            xcode: Xcode_16.1
            target: catalyst
          - os: macos-15
            xcode: Xcode_16.1
            target: visionOS
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache/restore@v4
      with:
        path: .build
        key: ${{needs.spm-package-resolved.outputs.cache_key}}
    - name: Xcodes
      run: ls -l /Applications/Xcode*
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - name: Initialize xcodebuild
      run: scripts/setup_spm_tests.sh
    - name: Unit Tests
      run: scripts/third_party/travis/retry.sh ./scripts/build.sh FirebaseStorageUnit ${{ matrix.target }} spm

  quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    # TODO: See #12399 and restore Objective-C testing for Xcode 15 if GHA is fixed.
    strategy:
      matrix:
        include:
          #- os: macos-13
          #  xcode: Xcode_14.2 # TODO: the legacy ObjC quickstart doesn't build with Xcode 15.
          - swift: swift
            os: macos-15
            xcode: Xcode_16.1
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      LEGACY: true
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
    - name: Setup quickstart
      run: scripts/setup_quickstart.sh storage
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-storage.plist.gpg \
          quickstart-ios/storage/GoogleService-Info.plist "$plist_secret"
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - name: Test quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Storage false ${{ matrix.swift }})

  quickstart-ftl-cron-only:
    # Don't run on private repo.
    if: github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule'
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      LEGACY: true
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Setup quickstart
      run: scripts/setup_quickstart.sh storage
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-storage.plist.gpg \
          quickstart-ios/storage/GoogleService-Info.plist "$plist_secret"
    # - name: Build objc quickstart
    #   run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart_ftl.sh Storage)
    - name: Build swift quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart_ftl.sh Storage swift)
    - id: ftl_test
      uses: FirebaseExtended/github-actions/firebase-test-lab@v1.4
      with:
        credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CREDENTIALS }}
        testapp_dir: quickstart-ios/build-for-testing
        test_type: "xctest"

  pod-lib-lint:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    strategy:
      matrix:
        target: [ios, tvos, macos, watchos]
        build-env:
          - os: macos-14
            xcode: Xcode_15.3
            tests: --skip-tests
          - os: macos-15
            xcode: Xcode_16.1
            tests: --test-specs=unit
    runs-on: ${{ matrix.build-env.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Xcodes
      run: ls -l /Applications/Xcode*
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.build-env.xcode }}.app/Contents/Developer
    - name: Build and test
      run: |
       scripts/third_party/travis/retry.sh scripts/pod_lib_lint.rb FirebaseStorage.podspec ${{ matrix.build-env.tests }} \
         --platforms=${{ matrix.target }}

  storage-cron-only:
    # Don't run on private repo.
    if: github.event_name == 'schedule' && github.repository == 'Firebase/firebase-ios-sdk'
    strategy:
      matrix:
        target: [ios, tvos, macos, watchos]
        build-env:
          - os: macos-14
            xcode: Xcode_15.3
          - os: macos-15
            xcode: Xcode_16.1
    runs-on: ${{ matrix.build-env.os }}
    needs: pod-lib-lint
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.build-env.xcode }}.app/Contents/Developer
    - name: PodLibLint Storage Cron
      run: scripts/third_party/travis/retry.sh scripts/pod_lib_lint.rb FirebaseStorage.podspec --platforms=${{ matrix.target }} --use-static-frameworks --skip-tests
