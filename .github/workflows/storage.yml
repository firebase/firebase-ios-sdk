name: storage

permissions:
  contents: read

on:
  workflow_dispatch:
  pull_request:
    paths:
    - 'FirebaseStorage**'
    - 'FirebaseAuth/Interop/*.h'
    - '.github/workflows/storage.yml'
    - '.github/workflows/common.yml'
    - '.github/workflows/common_cocoapods.yml'
    - '.github/workflows/common_catalyst.yml'
    # Rebuild on Ruby infrastructure changes.
    - 'Gemfile*'
  schedule:
    # Run every day at 12am (PST) - cron uses UTC times
    - cron:  '0 8 * * *'

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
    cancel-in-progress: true

jobs:
  spm:
    uses: ./.github/workflows/common.yml
    with:
      target: FirebaseStorageUnit

  catalyst:
    uses: ./.github/workflows/common_catalyst.yml
    with:
      product: FirebaseStorage
      target: FirebaseStorage-Unit-unit

  storage-integration-tests:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    strategy:
      matrix:
        language: [Swift, ObjC]
        include:
          - os: macos-15
            xcode: Xcode_16.3
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: mikehardy/buildcache-action@c87cea0ccd718971d6cc39e672c4f26815b6c126
      with:
        cache_key: integration${{ matrix.os }}
    - uses: ruby/setup-ruby@354a1ad156761f5ee2b7b13fa8e09943a5e8d252 # v1
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Install xcpretty
      run: gem install xcpretty
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/storage-db-plist.gpg \
          FirebaseStorage/Tests/Integration/Resources/GoogleService-Info.plist "$plist_secret"
    - name: Install Credentials.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/Storage/Credentials.h.gpg \
          FirebaseStorage/Tests/ObjCIntegration/Credentials.h "$plist_secret"
    - name: Install Credentials.swift
      run: |
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/Storage/Credentials.swift.gpg \
          FirebaseStorage/Tests/Integration/Credentials.swift "$plist_secret"
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
      with:
        timeout_minutes: 120
        max_attempts: 3
        retry_on: error
        retry_wait_seconds: 120
        command: ([ -z $plist_secret ] || scripts/build.sh Storage${{ matrix.language }} all)

  quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    # TODO: See #12399 and restore Objective-C testing for Xcode 15 if GHA is fixed.
    strategy:
      matrix:
        include:
          #- os: macos-13
          #  xcode: Xcode_14.2 # TODO: the legacy ObjC quickstart doesn't build with Xcode 15.
          - swift: swift
            os: macos-15
            xcode: Xcode_16.2
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      LEGACY: true
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@354a1ad156761f5ee2b7b13fa8e09943a5e8d252 # v1
    - name: Setup quickstart
      run: scripts/setup_quickstart.sh storage
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-storage.plist.gpg \
          quickstart-ios/storage/GoogleService-Info.plist "$plist_secret"
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - name: Test quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Storage false ${{ matrix.swift }})

  quickstart-ftl-cron-only:
    # Don't run on private repo.
    if: github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule'
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      LEGACY: true
    runs-on: macos-15
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@354a1ad156761f5ee2b7b13fa8e09943a5e8d252 # v1
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Setup quickstart
      run: scripts/setup_quickstart.sh storage
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-storage.plist.gpg \
          quickstart-ios/storage/GoogleService-Info.plist "$plist_secret"
    # - name: Build objc quickstart
    #   run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart_ftl.sh Storage)
    - name: Build swift quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart_ftl.sh Storage swift)
    - id: ftl_test
      uses: FirebaseExtended/github-actions/firebase-test-lab@v1.4
      with:
        credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CREDENTIALS }}
        testapp_dir: quickstart-ios/build-for-testing
        test_type: "xctest"

  pod_lib_lint:
    uses: ./.github/workflows/common_cocoapods.yml
    with:
      product: FirebaseStorage
      test_specs: unit

  storage-cron-only:
    # Don't run on private repo.
    if: github.event_name == 'schedule' && github.repository == 'Firebase/firebase-ios-sdk'
    strategy:
      matrix:
        target: [ios, tvos, macos, watchos]
        build-env:
          - os: macos-14
            xcode: Xcode_16.2
          - os: macos-15
            xcode: Xcode_16.2
    runs-on: ${{ matrix.build-env.os }}
    needs: pod_lib_lint
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@354a1ad156761f5ee2b7b13fa8e09943a5e8d252 # v1
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.build-env.xcode }}.app/Contents/Developer
    - name: PodLibLint Storage Cron
      run: scripts/third_party/travis/retry.sh scripts/pod_lib_lint.rb FirebaseStorage.podspec --platforms=${{ matrix.target }} --use-static-frameworks --skip-tests
