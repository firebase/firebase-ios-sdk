name: vertexai

on:
  pull_request:
    paths:
    - 'FirebaseVertexAI**'
    - '.github/workflows/vertexai.yml'
    - 'Gemfile*'
  schedule:
    # Run every day at 11pm (PST) - cron uses UTC times
    - cron:  '0 7 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  spm-package-resolved:
    runs-on: macos-14
    outputs:
      cache_key: ${{ steps.generate_cache_key.outputs.cache_key }}
    env:
      FIREBASECI_USE_LATEST_GOOGLEAPPMEASUREMENT: 1
    steps:
      - uses: actions/checkout@v4
      - name: Generate Swift Package.resolved
        id: swift_package_resolve
        run: |
          swift package resolve
      - name: Generate cache key
        id: generate_cache_key
        run: |
          cache_key="${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}"
          echo "cache_key=${cache_key}" >> "$GITHUB_OUTPUT"
      - uses: actions/cache/save@v4
        id: cache
        with:
          path: .build
          key: ${{ steps.generate_cache_key.outputs.cache_key }}

  spm-unit:
    strategy:
      matrix:
        include:
          - os: macos-13
            xcode: Xcode_15.2
            target: iOS
          - os: macos-14
            xcode: Xcode_15.4
            target: iOS
          - os: macos-15
            xcode: Xcode_16
            target: iOS
          - os: macos-15
            xcode: Xcode_16
            target: tvOS
          - os: macos-15
            xcode: Xcode_16
            target: macOS
          - os: macos-15
            xcode: Xcode_16
            target: watchOS
          - os: macos-15
            xcode: Xcode_16
            target: catalyst
          - os: macos-15
            xcode: Xcode_16
            target: visionOS
    runs-on: ${{ matrix.os }}
    needs: spm-package-resolved
    env:
      FIREBASECI_USE_LATEST_GOOGLEAPPMEASUREMENT: 1
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache/restore@v4
      with:
        path: .build
        key: ${{needs.spm-package-resolved.outputs.cache_key}}
    - name: Clone mock responses
      run: scripts/update_vertexai_responses.sh
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - name: Initialize xcodebuild
      run: scripts/setup_spm_tests.sh
    - uses: nick-fields/retry@v3
      with:
        timeout_minutes: 120
        max_attempts: 3
        retry_on: error
        retry_wait_seconds: 120
        command: scripts/build.sh FirebaseVertexAIUnit ${{ matrix.target }} spm

  testapp-integration:
    strategy:
      matrix:
        target: [iOS]
        os: [macos-15]
        include:
          - os: macos-15
            xcode: Xcode_16
    runs-on: ${{ matrix.os }}
    needs: spm-package-resolved
    env:
      TEST_RUNNER_FIRAAppCheckDebugToken: ${{ secrets.VERTEXAI_INTEGRATION_FAC_DEBUG_TOKEN }}
      FIREBASECI_USE_LATEST_GOOGLEAPPMEASUREMENT: 1
      secrets_passphrase: ${{ secrets.GHASecretsGPGPassphrase1 }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache/restore@v4
      with:
        path: .build
        key: ${{needs.spm-package-resolved.outputs.cache_key}}
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/VertexAI/TestApp-GoogleService-Info.plist.gpg \
        FirebaseVertexAI/Tests/TestApp/Resources/GoogleService-Info.plist "$secrets_passphrase"
    - name: Install Secret Credentials.swift
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/VertexAI/TestApp-Credentials.swift.gpg \
        FirebaseVertexAI/Tests/TestApp/Tests/Integration/Credentials.swift "$secrets_passphrase"
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - name: Run IntegrationTests
      run: scripts/build.sh VertexIntegration ${{ matrix.target }}

  pod-lib-lint:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    strategy:
      matrix:
        target: [ios]
        os: [macos-14]
        include:
          - os: macos-14
            xcode: Xcode_15.2
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Clone mock responses
      run: scripts/update_vertexai_responses.sh
    - uses: ruby/setup-ruby@v1
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - name: Build and test
      run: scripts/third_party/travis/retry.sh scripts/pod_lib_lint.rb FirebaseVertexAI.podspec --platforms=${{ matrix.target }}

  sample:
    strategy:
      matrix:
        include:
          - os: macos-13
            xcode: Xcode_15.2
          - os: macos-14
            xcode: Xcode_15.4
          - os: macos-15
            xcode: Xcode_16
    runs-on: ${{ matrix.os }}
    needs: spm-package-resolved
    env:
      FIREBASECI_USE_LATEST_GOOGLEAPPMEASUREMENT: 1
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache/restore@v4
      with:
        path: .build
        key: ${{needs.spm-package-resolved.outputs.cache_key}}
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - name: Placeholder GoogleService-Info.plist for build testing
      run: cp FirebaseCore/Tests/Unit/Resources/GoogleService-Info.plist FirebaseVertexAI/Sample/
    - uses: nick-fields/retry@v3
      with:
        timeout_minutes: 120
        max_attempts: 3
        retry_on: error
        retry_wait_seconds: 120
        command: scripts/build.sh VertexSample iOS
