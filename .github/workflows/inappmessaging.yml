name: inappmessaging

on:
  pull_request:
    paths:
    - 'FirebaseInAppMessaging**'
    - 'Interop/Analytics/Public/*.h'
    - '.github/workflows/inappmessaging.yml'
    - 'Gemfile*'
  schedule:
    # Run every day at 10pm (PST) - cron uses UTC times
    - cron:  '0 6 * * *'

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
    cancel-in-progress: true

jobs:

  pod_lib_lint:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'

    strategy:
      matrix:
        podspec: [FirebaseInAppMessaging.podspec]
        build-env:
          - os: macos-14
            xcode: Xcode_15.2
          - os: macos-15
            xcode: Xcode_16.1
    runs-on: ${{ matrix.build-env.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.build-env.xcode }}.app/Contents/Developer
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: FirebaseInAppMessaging
      run: scripts/third_party/travis/retry.sh scripts/pod_lib_lint.rb ${{ matrix.podspec}}

  tests:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'

# TODO(#12770): Update to macos-14 when tests are updated for Xcode 15.
    runs-on: macos-13
    strategy:
      matrix:
# TODO(#8682): Reenable iPad after fixing Xcode 13 test failures.
#        platform: [iOS, iPad]
        platform: [iOS]
        xcode: [Xcode_14.2]
    steps:
    - uses: actions/checkout@v4
    - uses: mikehardy/buildcache-action@c87cea0ccd718971d6cc39e672c4f26815b6c126
      with:
        cache_key: ${{ matrix.platform }}
    - uses: ruby/setup-ruby@v1
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - name: Prereqs
      run: scripts/install_prereqs.sh InAppMessaging ${{ matrix.platform }} xcodebuild
    - name: Build and test
      run: scripts/third_party/travis/retry.sh scripts/build.sh InAppMessaging ${{ matrix.platform }} xcodebuild

  spm-package-resolved:
    env:
      FIREBASECI_USE_LATEST_GOOGLEAPPMEASUREMENT: 1
    runs-on: macos-14
    outputs:
      cache_key: ${{ steps.generate_cache_key.outputs.cache_key }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate Swift Package.resolved
        id: swift_package_resolve
        run: |
          swift package resolve
      - name: Generate cache key
        id: generate_cache_key
        run: |
          cache_key="${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}"
          echo "cache_key=${cache_key}" >> "$GITHUB_OUTPUT"
      - uses: actions/cache/save@v4
        id: cache
        with:
          path: .build
          key: ${{ steps.generate_cache_key.outputs.cache_key }}

  spm:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    needs: [spm-package-resolved]
    strategy:
      matrix:
        include:
          - os: macos-13
            xcode: Xcode_15.2
          - os: macos-14
            xcode: Xcode_15.4
          - os: macos-15
            xcode: Xcode_16.1
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache/restore@v4
      with:
        path: .build
        key: ${{needs.spm-package-resolved.outputs.cache_key}}
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - name: Initialize xcodebuild
      run: scripts/setup_spm_tests.sh
    - name: iOS Unit Tests
      run: scripts/third_party/travis/retry.sh ./scripts/build.sh FirebaseInAppMessaging-Beta iOS spmbuildonly

  fiam-cron-only:
    # Don't run on private repo.
    if: github.event_name == 'schedule' && github.repository == 'Firebase/firebase-ios-sdk'

    runs-on: macos-14
    strategy:
      matrix:
        flags: [
          '--use-static-frameworks'
        ]
        platform: [ios, tvos]
    needs: pod_lib_lint
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: PodLibLint InAppMessaging Cron
      run: scripts/third_party/travis/retry.sh scripts/pod_lib_lint.rb FirebaseInAppMessaging.podspec --platforms=${{ matrix.platform }} ${{ matrix.flags }}

  quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'

    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
    runs-on: macos-15

    steps:
    - uses: actions/checkout@v4
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
    - name: Setup quickstart
      run: scripts/setup_quickstart.sh inappmessaging
    - name: install secret googleservice-info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-inappmessaging.plist.gpg \
          quickstart-ios/inappmessaging/GoogleService-Info.plist "$plist_secret"
    - name: Test objc quickstart
      run: ([ -z $plist_secret ] ||
            scripts/third_party/travis/retry.sh scripts/test_quickstart.sh InAppMessaging true)
    - name: Test swift quickstart
      run: ([ -z $plist_secret ] ||
            scripts/third_party/travis/retry.sh scripts/test_quickstart.sh InAppMessaging true swift)
