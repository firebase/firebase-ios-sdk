name: auth

on:
  pull_request:
    paths:
    - 'FirebaseAuth**'
    - 'FirebaseAuth/Interop/*.h'
    - '.github/workflows/auth.yml'
    - 'scripts/gha-encrypted/AuthSample/SwiftApplication.plist.gpg'
    - 'Gemfile*'
  schedule:
    # Run every day at 1am (PST) - cron uses UTC times
    - cron:  '0 9 * * *'

env:
  FIREBASE_CI: true

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
    cancel-in-progress: true

jobs:

  pod-lib-lint:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'

    strategy:
      matrix:
        podspec: [FirebaseAuthInterop.podspec, FirebaseAuth.podspec]
        target: [ios, tvos, macos --skip-tests, watchos]
        os: [macos-14]
        xcode: [Xcode_15.2]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Configure test keychain
      run: scripts/configure_test_keychain.sh
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - uses: nick-fields/retry@v3
      with:
        timeout_minutes: 120
        max_attempts: 3
        retry_on: error
        retry_wait_seconds: 120
        command: scripts/pod_lib_lint.rb ${{ matrix.podspec }} --platforms=${{ matrix.target }} ${{ matrix.tests }}

  # TODO: Fix warnings on Xcode 16 and move into matrix above.
  pod-lib-lint-xc16:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'

    strategy:
      matrix:
        podspec: [FirebaseAuthInterop.podspec, FirebaseAuth.podspec]
        target: [ios, tvos, macos --skip-tests --allow-warnings, watchos]
        os: [macos-15]
        xcode: [Xcode_16.1]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Configure test keychain
      run: scripts/configure_test_keychain.sh
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - uses: nick-fields/retry@v3
      with:
        timeout_minutes: 120
        max_attempts: 3
        retry_on: error
        retry_wait_seconds: 120
        command: scripts/pod_lib_lint.rb ${{ matrix.podspec }} --platforms=${{ matrix.target }} ${{ matrix.tests }} --allow-warnings

  spm-package-resolved:
    env:
      FIREBASECI_USE_LATEST_GOOGLEAPPMEASUREMENT: 1
    runs-on: macos-14
    outputs:
      cache_key: ${{ steps.generate_cache_key.outputs.cache_key }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate Swift Package.resolved
        id: swift_package_resolve
        run: |
          swift package resolve
      - name: Generate cache key
        id: generate_cache_key
        run: |
          cache_key="${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}"
          echo "cache_key=${cache_key}" >> "$GITHUB_OUTPUT"
      - uses: actions/cache/save@v4
        id: cache
        with:
          path: .build
          key: ${{ steps.generate_cache_key.outputs.cache_key }}

  spm:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    needs: [spm-package-resolved]
    strategy:
      matrix:
        include:
          - os: macos-13
            xcode: Xcode_15.2
            target: iOS spm
          - os: macos-14
            xcode: Xcode_15.4
            target: iOS spm
          - os: macos-15
            xcode: Xcode_16.1
            target: iOS spm
          - os: macos-15
            xcode: Xcode_16.1
            target: tvOS spm
          - os: macos-15
            xcode: Xcode_16.1
            target: macOS spmbuildonly
          - os: macos-15
            xcode: Xcode_16.1
            target: watchOS spm
          - os: macos-15
            xcode: Xcode_16.1
            target: catalyst spm
          - os: macos-15
            xcode: Xcode_16.1
            target: visionOS spm
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache/restore@v4
      with:
        path: .build
        key: ${{needs.spm-package-resolved.outputs.cache_key}}
    - name: Xcode
      run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app/Contents/Developer
    - name: Initialize xcodebuild
      run: scripts/setup_spm_tests.sh
    - uses: nick-fields/retry@v3
      with:
        timeout_minutes: 120
        max_attempts: 3
        retry_on: error
        retry_wait_seconds: 120
        command: scripts/third_party/travis/retry.sh ./scripts/build.sh AuthUnit ${{ matrix.target }}

  integration-tests:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    needs: [spm-package-resolved]
    strategy:
      matrix:
        scheme: [ObjCApiTests, SwiftApiTests, AuthenticationExampleUITests]
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      FIREBASECI_USE_LATEST_GOOGLEAPPMEASUREMENT: 1
    runs-on: macos-15
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache/restore@v4
      with:
        path: .build
        key: ${{needs.spm-package-resolved.outputs.cache_key}}
    - name: Install Secrets
      run: |
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthCredentials.h.gpg \
          FirebaseAuth/Tests/SampleSwift/ObjCApiTests/AuthCredentials.h "$plist_secret"
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthSample/SwiftApplication.plist.gpg \
          FirebaseAuth/Tests/SampleSwift/AuthenticationExample/SwiftApplication.plist "$plist_secret"
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthSample/AuthCredentials.h.gpg \
          FirebaseAuth/Tests/SampleSwift/AuthCredentials.h "$plist_secret"
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthSample/GoogleService-Info.plist.gpg \
          FirebaseAuth/Tests/SampleSwift/GoogleService-Info.plist "$plist_secret"
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthSample/GoogleService-Info_multi.plist.gpg \
          FirebaseAuth/Tests/SampleSwift/GoogleService-Info_multi.plist "$plist_secret"
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthSample/Sample.entitlements.gpg \
          FirebaseAuth/Tests/SampleSwift/Sample.entitlements "$plist_secret"
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/AuthSample/Credentials.swift.gpg \
          FirebaseAuth/Tests/SampleSwift/SwiftApiTests/Credentials.swift "$plist_secret"
    - name: Xcode
      run: sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer
    - uses: nick-fields/retry@v3
      with:
        timeout_minutes: 120
        max_attempts: 3
        retry_on: error
        retry_wait_seconds: 120
        command: ([ -z $plist_secret ] || scripts/build.sh Auth iOS ${{ matrix.scheme }})

  catalyst:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - uses: mikehardy/buildcache-action@c87cea0ccd718971d6cc39e672c4f26815b6c126
      with:
        cache_key: catalyst${{ matrix.os }}
    - uses: ruby/setup-ruby@v1
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - uses: nick-fields/retry@v3
      with:
        timeout_minutes: 120
        max_attempts: 3
        retry_on: error
        retry_wait_seconds: 120
        command: scripts/test_catalyst.sh FirebaseAuth build FirebaseAuth-Unit-unit

  quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'

    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
    runs-on: macos-15
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
    - name: Setup quickstart
      run: scripts/setup_quickstart.sh authentication
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-auth.plist.gpg \
          quickstart-ios/authentication/GoogleService-Info.plist "$plist_secret"
    - name: Test swift quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Authentication false)

  # TODO(@sunmou99): currently have issue with this job, will re-enable it once the issue resolved.
  # quickstart-ftl-cron-only:
  #   # Don't run on private repo.
  #   if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'

  #   env:
  #     plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
  #     signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
  #   runs-on: macos-14
  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: ruby/setup-ruby@v1
  #   - uses: actions/setup-python@v5
  #     with:
  #      python-version: '3.11'
  #   - name: Setup quickstart
  #     run: scripts/setup_quickstart.sh authentication
  #   - name: Install Secret GoogleService-Info.plist
  #     run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-auth.plist.gpg \
  #         quickstart-ios/authentication/GoogleService-Info.plist "$plist_secret"
  #   - name: Build swift quickstart
  #     run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart_ftl.sh Authentication)
  #   - id: ftl_test
  #     uses: FirebaseExtended/github-actions/firebase-test-lab@v1.4
  #     with:
  #       credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CREDENTIALS }}
  #       testapp_dir: quickstart-ios/build-for-testing
  #       test_type: "xctest"

  auth-cron-only:
    # Don't run on private repo.
    if: github.event_name == 'schedule' && github.repository == 'Firebase/firebase-ios-sdk'

    runs-on: macos-14
    strategy:
      matrix:
        # The macos and tvos tests can hang, and watchOS doesn't have tests.
        target: [ios, tvos --skip-tests, macos --skip-tests, watchos --skip-tests]
        flags: [
          '--use-static-frameworks'
        ]
    needs: pod-lib-lint
    steps:
    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Configure test keychain
      run: scripts/configure_test_keychain.sh
    - uses: nick-fields/retry@v3
      with:
        timeout_minutes: 120
        max_attempts: 3
        retry_on: error
        retry_wait_seconds: 120
        command: scripts/third_party/travis/retry.sh scripts/pod_lib_lint.rb FirebaseAuth.podspec --platforms=${{ matrix.target }} ${{ matrix.flags }}
