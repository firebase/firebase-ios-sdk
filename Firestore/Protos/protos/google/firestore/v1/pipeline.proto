// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.firestore.v1;

import "google/api/field_behavior.proto";
import "google/firestore/v1/document.proto";

option csharp_namespace = "Google.Cloud.Firestore.V1";
option go_package = "cloud.google.com/go/firestore/apiv1/firestorepb;firestorepb";
option java_multiple_files = true;
option java_outer_classname = "PipelineProto";
option java_package = "com.google.firestore.v1";
option objc_class_prefix = "GCFS";
option php_namespace = "Google\\Cloud\\Firestore\\V1";
option ruby_package = "Google::Cloud::Firestore::V1";

// A Firestore query represented as an ordered list of operations / stages.
//
// This is considered the top-level function which plans & executes a query.
// It is logically equivalent to `query(stages, options)`, but prevents the
// client from having to build a function wrapper.
message StructuredPipeline {
  // Required. The pipeline query to execute.
  Pipeline pipeline = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Optional query-level arguments.
  //
  map<string, Value> options = 2 [(google.api.field_behavior) = OPTIONAL];
}